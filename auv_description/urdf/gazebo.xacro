<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- Center of buoyancy -->
    <xacro:property name="auv_cob" value="${props['physical']['center_of_buoyancy'][0]} ${props['physical']['center_of_buoyancy'][1]} ${props['physical']['center_of_buoyancy'][2]}"/>

    <!-- Vehicle's actual volume (Gazebo cannot compute the volume out of the mesh) -->
    <xacro:property name="auv_volume" value="${props['physical']['volume']}"/>

    <!-- Describing the dimensions of the vehicle's bounding box -->
    <xacro:property name="auv_length" value="${props['physical']['length']}"/>
    <xacro:property name="auv_width"  value="${props['physical']['width']}"/>
    <xacro:property name="auv_height" value="${props['physical']['height']}"/>

    <xacro:macro name="auv_hydro_model" params="namespace">
      <!-- List of hydrodynamic models this robot's links -->
      <link name="${namespace}/base_link">
        <!-- This flag will make the link neutrally buoyant -->
        <neutrally_buoyant>0</neutrally_buoyant>

        <!-- Link's volume -->
        <volume>${auv_volume}</volume>

        <!-- Link's bounding box, it is used to recalculate the immersed
        volume when close to the surface.
        This is a workaround the invalid bounding box given by Gazebo-->
        <box>
          <width>${auv_width}</width>
          <length>${auv_length}</length>
          <height>${auv_height}</height>
        </box>

        <!-- Center of buoyancy -->
        <center_of_buoyancy>${auv_cob}</center_of_buoyancy>

        <!--
        Choose one of the hydrodynamic models below, all are based on
        Fossen's equation of motion for underwater vehicles

        Reference:
        [1] Fossen, Thor I. Handbook of marine craft hydrodynamics and motion
            control. John Wiley & Sons, 2011.
        -->

        <!-- 1) Fossen's equation of motion -->
        <hydrodynamic_model>
          <type>fossen</type>
          <added_mass>
            ${props['auv_dynamics']['M_A'][0][0]} ${props['auv_dynamics']['M_A'][0][1]} ${props['auv_dynamics']['M_A'][0][2]} ${props['auv_dynamics']['M_A'][0][3]} ${props['auv_dynamics']['M_A'][0][4]} ${props['auv_dynamics']['M_A'][0][5]}
            ${props['auv_dynamics']['M_A'][1][0]} ${props['auv_dynamics']['M_A'][1][1]} ${props['auv_dynamics']['M_A'][1][2]} ${props['auv_dynamics']['M_A'][1][3]} ${props['auv_dynamics']['M_A'][1][4]} ${props['auv_dynamics']['M_A'][1][5]}
            ${props['auv_dynamics']['M_A'][2][0]} ${props['auv_dynamics']['M_A'][2][1]} ${props['auv_dynamics']['M_A'][2][2]} ${props['auv_dynamics']['M_A'][2][3]} ${props['auv_dynamics']['M_A'][2][4]} ${props['auv_dynamics']['M_A'][2][5]}
            ${props['auv_dynamics']['M_A'][3][0]} ${props['auv_dynamics']['M_A'][3][1]} ${props['auv_dynamics']['M_A'][3][2]} ${props['auv_dynamics']['M_A'][3][3]} ${props['auv_dynamics']['M_A'][3][4]} ${props['auv_dynamics']['M_A'][3][5]}
            ${props['auv_dynamics']['M_A'][4][0]} ${props['auv_dynamics']['M_A'][4][1]} ${props['auv_dynamics']['M_A'][4][2]} ${props['auv_dynamics']['M_A'][4][3]} ${props['auv_dynamics']['M_A'][4][4]} ${props['auv_dynamics']['M_A'][4][5]}
            ${props['auv_dynamics']['M_A'][5][0]} ${props['auv_dynamics']['M_A'][5][1]} ${props['auv_dynamics']['M_A'][5][2]} ${props['auv_dynamics']['M_A'][5][3]} ${props['auv_dynamics']['M_A'][5][4]} ${props['auv_dynamics']['M_A'][5][5]}
          </added_mass>
          <!--
            The linear damping coefficients can be provided as a diagonal (6 elements)
            or a full matrix (36 coefficients), like the added-mass coefficients above
          -->
          <linear_damping>
            ${props['auv_dynamics']['D'][0]} ${props['auv_dynamics']['D'][1]} ${props['auv_dynamics']['D'][2]} ${props['auv_dynamics']['D'][3]} ${props['auv_dynamics']['D'][4]} ${props['auv_dynamics']['D'][5]}
          </linear_damping>
          <!--
            The linear damping coefficients proportional to the forward speed
            can be provided as a diagonal (6 elements) or a full matrix (36 coefficients),
            like the added-mass coefficients above.
            This matrix is mostly useful for slender bodies (e.g. AUVs with torpedo shape)
          -->
          <linear_damping_forward_speed>
            0 0 0 0 0 0
          </linear_damping_forward_speed>
          <!--
            The quadratic damping coefficients can be provided as a diagonal (6 elements)
            or a full matrix (36 coefficients), like the added-mass coefficients above
          -->
          <quadratic_damping>
            ${props['auv_dynamics']['D_n'][0]} ${props['auv_dynamics']['D_n'][1]} ${props['auv_dynamics']['D_n'][2]} ${props['auv_dynamics']['D_n'][3]} ${props['auv_dynamics']['D_n'][4]} ${props['auv_dynamics']['D_n'][5]}
          </quadratic_damping>
        </hydrodynamic_model>

      </link>
    </xacro:macro>

</robot>
